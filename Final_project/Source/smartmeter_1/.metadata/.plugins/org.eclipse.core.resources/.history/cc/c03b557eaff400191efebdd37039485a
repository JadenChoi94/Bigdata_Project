package bigdata;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import bigdata.GenMeterLogThread;

public class GenMeterLog {

	public static void main(String[] args) {
		
		PrintWriter printWriter = null;
		
		try {
			int meterCount = 100;
			String date =  new SimpleDateFormat( "yyyyMMdd" ).format( new Date( System.currentTimeMillis() ) );
	
			if(args != null  && args.length > 1) {
				date = args[0];
			}
			if(args != null && args.length > 1) {
				meterCount = Integer.parseInt(args[1]);
			}
			
			String logFile = "D:/Bigdata_Project/Final_project/data/MeterStatus_" + date + ".log";
			printWriter = new PrintWriter( new FileWriter( logFile ), true );
			
			ArrayList<Thread> threads = new ArrayList<Thread>();
			
			for(int i = 1; i <= meterCount; i++) {
				Thread t = new GenMeterLogThread( date, genMeterId( i ), genMacAdd(), genFamily(), printWriter );
		        t.start();
		        threads.add(t);
			}
	
			for(Thread thread : threads){
				thread.join();
			}
			
		} catch (InterruptedException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if( printWriter != null ) {
				printWriter.close();
				System.out.println( "finished" );
			}
		}
	}
	
	public static int genFamily(){
		int famCount = 0;
		Random rand   = new Random();
		int famNum = (int)((Math.abs(rand.nextInt()*100+1)));
		//1명일때 
        if(famNum >=1 && famNum <= 14.59) {
        	famCount = 1;
        }
        //2명일때
        else if (famNum > 14.59 && famNum <= 43.05){
        	famCount = 2;
        }
        //3명일때
        else if (famNum > 43.05 && famNum <= 67.17){
        	famCount = 3;
        }
        //4명 일때
        else if (famNum > 67.17 && famNum <= 92.44){
        	famCount = 4;
        }
        //5명 일때
        else if (famNum > 92.44 && famNum <= 98.84){
        	famCount = 5;
        }
        //6명 일때
        else if (famNum > 98.84 && famNum <= 99.74){
        	famCount = 6;
        }
        //7명 일때
        else if (famNum > 99.74 && famNum <= 99.96){
        	famCount = 7;
        }
        //8명 일때
        else if (famNum > 99.96 && famNum < 99.99) {
        	famCount = 8;
        }
        //9명 일때
        else {
        	famCount = 9;
        }	 
		return famCount;
	}
	
	public static String genMeterId(int num) { 
		String prefixNum = ("H");
		DecimalFormat format = new DecimalFormat("000");
		String meterNum = format.format(num);

		return prefixNum + meterNum;
	}
	
	public static String genMacAdd() {
	    Random rand = new Random();
	    byte[] macAddr = new byte[6];
	    rand.nextBytes(macAddr);

	    macAddr[0] = (byte)(macAddr[0] & (byte)254);  

	    StringBuilder sb = new StringBuilder(18);
	    for(byte b : macAddr){
	        if(sb.length() > 0)
	            sb.append(":");
	        sb.append(String.format("%02x", b));
	    }
	   
	    return sb.toString();
	}

}
